# ClusterSecretStore for Kubernetes provider
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: cluster-secret-store
spec:
  provider:
    kubernetes:
      # Use the in-cluster service account for authentication
      auth:
        serviceAccount:
          name: external-secrets
          namespace: external-secrets
      # Source secrets from digitalocean-secrets namespace  
      remoteNamespace: digitalocean-secrets
      # Use the cluster's root CA for validation
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: default
          key: ca.crt
---
# RBAC for accessing source secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-secret-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-secret-reader
subjects:
- kind: ServiceAccount
  name: external-secrets
  namespace: external-secrets