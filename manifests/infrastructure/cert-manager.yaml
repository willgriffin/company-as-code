# cert-manager for automatic TLS certificate management

---
# cert-manager namespace
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  labels:
    name: cert-manager
---
# cert-manager Helm repository
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: jetstack
  namespace: cert-manager
spec:
  interval: 30m
  url: https://charts.jetstack.io
---
# cert-manager Helm release
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 30m
  chart:
    spec:
      chart: cert-manager
      version: "v1.14.4"
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: cert-manager
  values:
    installCRDs: true
    
    # Resource configuration
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 128Mi
    
    # Webhook configuration
    webhook:
      resources:
        requests:
          cpu: 5m
          memory: 16Mi
        limits:
          cpu: 50m
          memory: 64Mi
    
    # CA Injector configuration
    cainjector:
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 100m
          memory: 128Mi
    
    # Security context
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    
    # Pod security context
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
    
    # Prometheus monitoring
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true
        prometheusInstance: default
        targetPort: 9402
        path: /metrics
        interval: 60s
        scrapeTimeout: 30s
        labels: {}
---
# ClusterIssuer for Let's Encrypt production
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: willgriffin@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: kong
---
# ClusterIssuer for Let's Encrypt staging (for testing)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: willgriffin@gmail.com
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: kong
---
# Wildcard certificate for the domain
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: wildcard-tls
  namespace: kong-system
spec:
  secretName: wildcard-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - "happyvertical.com"
  - "*.happyvertical.com"
---
# Certificate for specific services
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: services-tls
  namespace: kong-system
spec:
  secretName: services-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - "api.happyvertical.com"
  - "auth.happyvertical.com"
  - "ai.happyvertical.com"
  - "cloud.happyvertical.com"
  - "chat.happyvertical.com"
  - "mail.happyvertical.com"
  - "grafana.happyvertical.com"
  - "prometheus.happyvertical.com"
  - "jaeger.happyvertical.com"