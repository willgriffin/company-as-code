# Database operators for PostgreSQL and Redis

---
# CloudNativePG namespace
apiVersion: v1
kind: Namespace
metadata:
  name: cnpg-system
  labels:
    name: cnpg-system
---
# CloudNativePG Helm repository
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: cnpg
  namespace: cnpg-system
spec:
  interval: 30m
  url: https://cloudnative-pg.github.io/charts
---
# CloudNativePG operator
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudnative-pg
  namespace: cnpg-system
spec:
  interval: 30m
  chart:
    spec:
      chart: cloudnative-pg
      version: "0.20.1"
      sourceRef:
        kind: HelmRepository
        name: cnpg
        namespace: cnpg-system
  values:
    # Basic configuration
    replicaCount: 1
    
    # Image configuration
    image:
      repository: ghcr.io/cloudnative-pg/cloudnative-pg
      tag: ""  # Uses chart default
      pullPolicy: IfNotPresent
    
    # Resource configuration
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 500Mi
    
    # Security context
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    
    # Pod security context
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 10001
      fsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
    
    # Service account
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    
    # Monitoring
    monitoring:
      enabled: true
      podMonitor:
        enabled: true
        labels: {}
        interval: 30s
        scrapeTimeout: 10s
    
    # Webhook configuration
    webhook:
      port: 9443
      mutating:
        create: true
        failurePolicy: Fail
      validating:
        create: true
        failurePolicy: Fail
    
    # Additional configuration
    config:
      create: true
      data:
        INHERITED_ANNOTATIONS: "external-dns.alpha.kubernetes.io/hostname"
        INHERITED_LABELS: "environment,team,app.kubernetes.io/name"
---
# Redis Operator namespace
apiVersion: v1
kind: Namespace
metadata:
  name: redis-operator
  labels:
    name: redis-operator
---
# Redis Operator Helm repository
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: ot-helm
  namespace: redis-operator
spec:
  interval: 30m
  url: https://ot-container-kit.github.io/helm-charts/
---
# Redis Operator
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: redis-operator
  namespace: redis-operator
spec:
  interval: 30m
  chart:
    spec:
      chart: redis-operator
      version: "0.15.1"
      sourceRef:
        kind: HelmRepository
        name: ot-helm
        namespace: redis-operator
  values:
    # Redis operator configuration
    redisOperator:
      image:
        repository: quay.io/opstree/redis-operator
        tag: ""  # Uses chart default
        pullPolicy: IfNotPresent
      
      # Resource configuration
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 100m
          memory: 128Mi
      
      # Security context
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
    
    # Service account
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    
    # RBAC
    rbac:
      create: true
    
    # Webhook configuration
    webhook:
      enable: true
      port: 9443
---
# RabbitMQ Operator namespace
apiVersion: v1
kind: Namespace
metadata:
  name: rabbitmq-system
  labels:
    name: rabbitmq-system
---
# RabbitMQ Cluster Operator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-cluster-operator
  namespace: rabbitmq-system
  labels:
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/name: rabbitmq-cluster-operator
    app.kubernetes.io/part-of: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq-cluster-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/component: rabbitmq-operator
        app.kubernetes.io/name: rabbitmq-cluster-operator
        app.kubernetes.io/part-of: rabbitmq
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - args:
        - --metrics-bind-addr=:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: rabbitmqoperator/cluster-operator:2.6.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: operator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: rabbitmq-cluster-operator
      terminationGracePeriodSeconds: 10
---
# Service account for RabbitMQ operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-cluster-operator
  namespace: rabbitmq-system
---
# RBAC for RabbitMQ operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rabbitmq-cluster-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rabbitmq.com
  resources:
  - rabbitmqclusters
  - rabbitmqclusters/finalizers
  - rabbitmqclusters/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-cluster-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rabbitmq-cluster-operator
subjects:
- kind: ServiceAccount
  name: rabbitmq-cluster-operator
  namespace: rabbitmq-system