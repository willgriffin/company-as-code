# External Secrets Operator for centralized secret management

---
# External Secrets namespace
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-system
  labels:
    name: external-secrets-system
---
# External Secrets Helm repository
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: external-secrets
  namespace: external-secrets-system
spec:
  interval: 30m
  url: https://charts.external-secrets.io
---
# External Secrets Operator Helm release
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-secrets
  namespace: external-secrets-system
spec:
  interval: 30m
  chart:
    spec:
      chart: external-secrets
      version: "0.9.11"
      sourceRef:
        kind: HelmRepository
        name: external-secrets
        namespace: external-secrets-system
  values:
    # Installation configuration
    installCRDs: true
    
    # Replica configuration
    replicaCount: 1
    
    # Image configuration
    image:
      repository: ghcr.io/external-secrets/external-secrets
      tag: ""  # Uses chart default
      pullPolicy: IfNotPresent
    
    # Resource configuration
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 128Mi
    
    # Security context
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    
    podSecurityContext:
      fsGroup: 65534
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    
    # Service account
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    
    # Webhook configuration
    webhook:
      create: true
      replicaCount: 1
      
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 100m
          memory: 128Mi
      
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
    
    # Cert controller configuration
    certController:
      create: true
      replicaCount: 1
      
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          cpu: 100m
          memory: 128Mi
      
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
    
    # Metrics configuration
    metrics:
      listen:
        port: 8080
      service:
        enabled: true
        port: 8080
    
    # Service monitor for Prometheus
    serviceMonitor:
      enabled: true
      namespace: external-secrets-system
      labels: {}
      interval: 30s
      scrapeTimeout: 25s
---
# Namespace for centralizing secrets
apiVersion: v1
kind: Namespace
metadata:
  name: digitalocean-secrets
  labels:
    name: digitalocean-secrets
---
# Source secrets in digitalocean-secrets namespace
apiVersion: v1
kind: Secret
metadata:
  name: digitalocean-credentials
  namespace: digitalocean-secrets
type: Opaque
stringData:
  # These will be set via GitHub Secrets in CI/CD
  digitalocean-token: "placeholder-will-be-updated"
  # AI provider keys (optional)
  openai-api-key: "placeholder-will-be-updated"
  anthropic-api-key: "placeholder-will-be-updated"
  cohere-api-key: "placeholder-will-be-updated"
  # AWS SES credentials
  aws-access-key-id: "placeholder-will-be-updated"
  aws-secret-access-key: "placeholder-will-be-updated"
  # Database credentials
  postgres-admin-password: "placeholder-will-be-updated"
  redis-password: "placeholder-will-be-updated"
  # Application secrets
  nextcloud-admin-password: "placeholder-will-be-updated"
  keycloak-admin-password: "placeholder-will-be-updated"
  grafana-admin-password: "placeholder-will-be-updated"
---
# ClusterSecretStore for Kubernetes provider
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: digitalocean-secret-store
spec:
  provider:
    kubernetes:
      # Source secrets from digitalocean-secrets namespace
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: external-secrets
          namespace: external-secrets-system
      remoteNamespace: digitalocean-secrets
---
# RBAC for accessing source secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-secret-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-secret-reader
subjects:
- kind: ServiceAccount
  name: external-secrets
  namespace: external-secrets-system