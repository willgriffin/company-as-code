apiVersion: v1
kind: ConfigMap
metadata:
  name: observability-summary
  namespace: grafana
data:
  summary: |
    Unified Observability Platform
    ==============================
    
    Your Grafana instance now provides a unified view of all observability data:
    
    ## Available Datasources:
    
    ### üîç Prometheus (Metrics)
    - Application performance metrics
    - Infrastructure monitoring
    - Custom business metrics
    - Alerting rules and thresholds
    
    ### üï∏Ô∏è Jaeger (Distributed Tracing)
    - Request flow across services
    - Performance bottleneck identification
    - Service dependency mapping
    - Error trace analysis
    
    ### üìÑ Loki (Centralized Logging)
    - Application logs from all pods
    - Structured log search and filtering
    - Log correlation with traces and metrics
    - Real-time log streaming
    
    ### üö® Sentry (Error Tracking)
    - Application error details
    - Error frequency and trends
    - User impact analysis
    - Performance monitoring
    
    ## Unified Dashboards Available:
    
    ### 1. Application Observability
    - Real-time service health overview
    - Error rates and SLA tracking
    - Correlated traces, logs, and metrics
    - Sentry error integration
    
    ### 2. Service Map & Dependencies
    - Visual service topology
    - Request flow and dependencies
    - Performance bottleneck identification
    - Trace volume analytics
    
    ### 3. Infrastructure Overview
    - Cluster resource utilization
    - Node and pod health
    - Storage and network metrics
    - Capacity planning insights
    
    ## Key Features:
    
    ### üîó Trace-Log Correlation
    - Click on trace ID to see related logs
    - Automatic trace context injection
    - Seamless navigation between data types
    
    ### üìä Multi-Source Alerts
    - Combine metrics, logs, and traces in alerts
    - Context-rich notifications
    - Escalation policies
    
    ### üéØ Single Pane of Glass
    - All observability data in one interface
    - Cross-references between different data sources
    - Unified search and filtering
    
    ## Access URLs:
    - **Unified Dashboard**: https://grafana.{{ (datasource "config").domain.primary }}
    - **Metrics Only**: https://prometheus.{{ (datasource "config").domain.primary }}
    - **Traces Only**: https://tracing.{{ (datasource "config").domain.primary }}
    - **Errors Only**: https://sentry.{{ (datasource "config").domain.primary }}
    
    ## Best Practices:
    
    1. **Start with Application Observability dashboard** for service overview
    2. **Use Service Map** to understand dependencies
    3. **Drill down to specific traces** when investigating issues
    4. **Correlate errors in Sentry** with traces in Jaeger
    5. **Set up alerts** that combine multiple data sources
    
    ## For Developers:
    
    Your applications automatically get observability by adding one annotation:
    ```yaml
    annotations:
      instrumentation.opentelemetry.io/inject-[language]: "opentelemetry-operator-system/default-instrumentation"
    ```
    
    This enables:
    - ‚úÖ Automatic trace collection
    - ‚úÖ Metrics export to Prometheus
    - ‚úÖ Log aggregation to Loki
    - ‚úÖ Error tracking integration
    - ‚úÖ Unified Grafana dashboards
    
    No code changes required!