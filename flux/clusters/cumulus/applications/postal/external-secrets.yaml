# ExternalSecrets for Postal application

---
# Postal OAuth secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postal-oauth-secret
  namespace: postal
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: oauth-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: digitalocean-secrets
    kind: ClusterSecretStore
  target:
    name: postal-oauth-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: postal
          app.kubernetes.io/component: oauth-credentials
  data:
  - secretKey: client-secret
    remoteRef:
      key: oauth-credentials
      property: postal-oauth-client-secret

---
# Postal database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postal-db-secret
  namespace: postal
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: database-credentials
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: digitalocean-secrets
    kind: ClusterSecretStore
  target:
    name: postal-db-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: postal
          app.kubernetes.io/component: database-credentials
  data:
  - secretKey: username
    remoteRef:
      key: database-passwords
      property: postal-db-username
  - secretKey: password
    remoteRef:
      key: database-passwords
      property: postal-db-password

---
# Postal Redis credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postal-redis-secret
  namespace: postal
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: redis-credentials
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: digitalocean-secrets
    kind: ClusterSecretStore
  target:
    name: postal-redis-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: postal
          app.kubernetes.io/component: redis-credentials
  data:
  - secretKey: password
    remoteRef:
      key: redis-passwords
      property: postal-redis-password

---
# Postal application secret key
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postal-secret
  namespace: postal
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: app-secrets
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: digitalocean-secrets
    kind: ClusterSecretStore
  target:
    name: postal-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: postal
          app.kubernetes.io/component: app-secrets
  data:
  - secretKey: secret-key
    remoteRef:
      key: application-secrets
      property: postal-secret-key

---
# Postal RabbitMQ credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postal-rabbitmq-secret
  namespace: postal
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: rabbitmq-credentials
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: digitalocean-secrets
    kind: ClusterSecretStore
  target:
    name: postal-rabbitmq-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: postal
          app.kubernetes.io/component: rabbitmq-credentials
      data:
        password: "{{ .password }}"
        connection-string: "amqp://postal-admin:{{ .password }}@postal-rabbitmq.postal.svc.cluster.local:5672/postal"
  data:
  - secretKey: password
    remoteRef:
      key: rabbitmq-passwords
      property: postal-rabbitmq-password