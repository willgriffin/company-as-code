apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakClient
metadata:
  name: kong-gateway
  namespace: kong-system
  labels:
    app: keycloak
spec:
  realmRef:
    name: keycloak-realm
    namespace: keycloak
  client:
    clientId: kong-gateway
    name: Kong Gateway
    description: Kong API Gateway authentication
    enabled: true
    clientAuthenticatorType: client-secret
    secret: kong-oidc-secret
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    publicClient: false
    protocol: openid-connect
    attributes:
      "saml.assertion.signature": "false"
      "saml.force.post.binding": "false"
      "saml.multivalued.roles": "false"
      "saml.encrypt": "false"
      "saml.server.signature": "false"
      "saml.server.signature.keyinfo.ext": "false"
      "exclude.session.state.from.auth.response": "false"
      "saml_force_name_id_format": "false"
      "saml.client.signature": "false"
      "tls.client.certificate.bound.access.tokens": "false"
      "saml.authnstatement": "false"
      "display.on.consent.screen": "false"
      "saml.onetimeuse.condition": "false"
    redirectUris:
      - "https://api.{{ (datasource \"config\").domain }}/auth/callback"
      - "https://grafana.{{ (datasource \"config\").domain }}/auth/callback"
      - "https://prometheus.{{ (datasource \"config\").domain }}/auth/callback"
      - "https://sentry.{{ (datasource \"config\").domain }}/auth/callback"
      - "https://ai.{{ (datasource \"config\").domain }}/auth/callback"
    webOrigins:
      - "https://api.{{ (datasource \"config\").domain }}"
      - "https://grafana.{{ (datasource \"config\").domain }}"
      - "https://prometheus.{{ (datasource \"config\").domain }}"
      - "https://sentry.{{ (datasource \"config\").domain }}"
      - "https://ai.{{ (datasource \"config\").domain }}"
    defaultClientScopes:
      - web-origins
      - profile
      - roles
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt