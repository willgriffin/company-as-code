apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: happyvertical-realm
  namespace: keycloak
spec:
  keycloakCRName: keycloak
  realm:
    id: happyvertical
    realm: happyvertical
    displayName: "Happy Vertical"
    enabled: true
    sslRequired: external
    registrationAllowed: true
    registrationEmailAsUsername: true
    rememberMe: true
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: true
    editUsernameAllowed: false
    bruteForceProtected: true
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    defaultSignatureAlgorithm: RS256
    offlineSessionMaxLifespanEnabled: false
    offlineSessionMaxLifespan: 5184000
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespanRememberMe: 0
    offlineSessionIdleTimeout: 2592000
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    enabledEventTypes: []
    adminEventsEnabled: false
    adminEventsDetailsEnabled: false
    identityProviders: []
    identityProviderMappers: []
    internationalizationEnabled: false
    supportedLocales: []
    authenticationFlows: []
    authenticatorConfig: []
    requiredActions: []
    browserFlow: browser
    registrationFlow: registration
    directGrantFlow: direct grant
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients
    dockerAuthenticationFlow: docker auth
    attributes:
      cibaBackchannelTokenDeliveryMode: poll
      cibaExpiresIn: "120"
      cibaInterval: "5"
      cibaAuthRequestedUserHint: login_hint
      parRequestUriLifespan: "60"
      frontendUrl: "https://auth.happyvertical.com"
    userManagedAccessAllowed: false
    eventsEnabled: false
    eventsExpiration: 0
    defaultRole:
      name: default-roles-happyvertical
      description: "${role_default-roles}"
      composite: true
      clientRole: false
    defaultGroups: []
    groups: []
    defaultLocale: en
    passwordPolicy: "length(8)"
    clients:
      - clientId: mattermost
        name: Mattermost
        description: "Team collaboration platform"
        rootUrl: "https://chat.happyvertical.com"
        adminUrl: "https://chat.happyvertical.com"
        baseUrl: "https://chat.happyvertical.com"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ .Env.MATTERMOST_OAUTH_CLIENT_SECRET }}"
        redirectUris:
          - "https://chat.happyvertical.com/signup/gitlab/complete"
        webOrigins:
          - "https://chat.happyvertical.com"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          saml.force.post.binding: "false"
          saml.multivalued.roles: "false"
          frontchannel.logout.session.required: "false"
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
          saml.server.signature.keyinfo.ext: "false"
          use.refresh.tokens: "true"
          oidc.ciba.grant.enabled: "false"
          backchannel.logout.session.required: "true"
          client_credentials.use_refresh_token: "false"
          saml.client.signature: "false"
          require.pushed.authorization.requests: "false"
          saml.allow.ecp.flow: "false"
          id.token.as.detached.signature: "false"
          saml.assertion.signature: "false"
          client.secret.creation.time: "1702512000"
          saml.encrypt: "false"
          saml.server.signature: "false"
          exclude.session.state.from.auth.response: "false"
          saml.artifact.binding: "false"
          saml_force_name_id_format: "false"
          acr.loa.map: "{}"
          tls.client.certificate.bound.access.tokens: "false"
          saml.authnstatement: "false"
          display.on.consent.screen: "false"
          token.response.type.bearer.lower-case: "false"
          saml.onetimeuse.condition: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - name: "mattermost-id"
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "id"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "id"
              jsonType.label: "String"
          - name: "mattermost-username"
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "username"
              jsonType.label: "String"
        defaultClientScopes:
          - web-origins
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - clientId: nextcloud
        name: Nextcloud
        description: "File sync and share platform"
        rootUrl: "https://cloud.happyvertical.com"
        adminUrl: "https://cloud.happyvertical.com"
        baseUrl: "https://cloud.happyvertical.com"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ .Env.NEXTCLOUD_OIDC_CLIENT_SECRET }}"
        redirectUris:
          - "https://cloud.happyvertical.com/apps/oidc_login/oidc"
        webOrigins:
          - "https://cloud.happyvertical.com"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          saml.force.post.binding: "false"
          saml.multivalued.roles: "false"
          frontchannel.logout.session.required: "false"
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
          saml.server.signature.keyinfo.ext: "false"
          use.refresh.tokens: "true"
          oidc.ciba.grant.enabled: "false"
          backchannel.logout.session.required: "true"
          client_credentials.use_refresh_token: "false"
          saml.client.signature: "false"
          require.pushed.authorization.requests: "false"
          saml.allow.ecp.flow: "false"
          id.token.as.detached.signature: "false"
          saml.assertion.signature: "false"
          client.secret.creation.time: "1702512000"
          saml.encrypt: "false"
          saml.server.signature: "false"
          exclude.session.state.from.auth.response: "false"
          saml.artifact.binding: "false"
          saml_force_name_id_format: "false"
          acr.loa.map: "{}"
          tls.client.certificate.bound.access.tokens: "false"
          saml.authnstatement: "false"
          display.on.consent.screen: "false"
          token.response.type.bearer.lower-case: "false"
          saml.onetimeuse.condition: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - name: "nextcloud-groups"
            protocol: openid-connect
            protocolMapper: oidc-group-membership-mapper
            consentRequired: false
            config:
              full.path: "false"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "groups"
              userinfo.token.claim: "true"
          - name: "nextcloud-quota"
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "nextcloud_quota"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "quota"
              jsonType.label: "String"
          - name: "nextcloud-mail"
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "email"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "mail"
              jsonType.label: "String"
        defaultClientScopes:
          - web-origins
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - clientId: mailu
        name: Mailu
        description: "Email server platform"
        rootUrl: "https://mail.happyvertical.com"
        adminUrl: "https://mail.happyvertical.com"
        baseUrl: "https://mail.happyvertical.com"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ .Env.MAILU_OAUTH2_CLIENT_SECRET }}"
        redirectUris:
          - "https://mail.happyvertical.com/oauth2/callback"
        webOrigins:
          - "https://mail.happyvertical.com"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          saml.force.post.binding: "false"
          saml.multivalued.roles: "false"
          frontchannel.logout.session.required: "false"
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
          saml.server.signature.keyinfo.ext: "false"
          use.refresh.tokens: "true"
          oidc.ciba.grant.enabled: "false"
          backchannel.logout.session.required: "true"
          client_credentials.use_refresh_token: "false"
          saml.client.signature: "false"
          require.pushed.authorization.requests: "false"
          saml.allow.ecp.flow: "false"
          id.token.as.detached.signature: "false"
          saml.assertion.signature: "false"
          client.secret.creation.time: "1702512000"
          saml.encrypt: "false"
          saml.server.signature: "false"
          exclude.session.state.from.auth.response: "false"
          saml.artifact.binding: "false"
          saml_force_name_id_format: "false"
          acr.loa.map: "{}"
          tls.client.certificate.bound.access.tokens: "false"
          saml.authnstatement: "false"
          display.on.consent.screen: "false"
          token.response.type.bearer.lower-case: "false"
          saml.onetimeuse.condition: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: -1
        protocolMappers: []
        defaultClientScopes:
          - web-origins
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt