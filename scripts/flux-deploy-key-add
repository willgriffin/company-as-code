#!/usr/bin/env bash
set -euo pipefail

# Script to add Flux deploy key to GitHub repository
# This key is generated by Flux bootstrap and needs to be added to the repository

# Check if gh CLI is installed
if ! command -v gh &> /dev/null; then
    echo "Error: gh CLI is not installed. Please install it first:" >&2
    echo "  https://cli.github.com/" >&2
    exit 1
fi

# Check if authenticated with GitHub
if ! gh auth status &> /dev/null; then
    echo "Error: Not authenticated with GitHub. Please run 'gh auth login' first." >&2
    exit 1
fi

# Check if kubectl is available
if ! command -v kubectl &> /dev/null; then
    echo "Error: kubectl not found. Please ensure kubectl is installed and configured." >&2
    exit 1
fi

# Find repository root
REPO_ROOT=$(git rev-parse --show-toplevel 2>/dev/null || echo ".")
cd "$REPO_ROOT"

# Get repository name (owner/repo format)
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner)
if [ -z "$REPO" ]; then
    echo "Error: Could not determine repository. Make sure you're in a git repository." >&2
    exit 1
fi

# Check if flux-system secret exists
if ! kubectl get secret flux-system -n flux-system &> /dev/null; then
    echo "Error: flux-system secret not found. Please run 'flux bootstrap' first." >&2
    exit 1
fi

# Extract the public key from the secret
echo "Extracting Flux deploy key from cluster..."
DEPLOY_KEY=$(kubectl get secret flux-system -n flux-system -o jsonpath='{.data.identity\.pub}' | base64 -d)

if [ -z "$DEPLOY_KEY" ]; then
    echo "Error: Could not extract deploy key from flux-system secret" >&2
    exit 1
fi

echo "Deploy key found:"
echo "$DEPLOY_KEY"
echo

# Check if a deploy key with the title already exists
KEY_TITLE="flux-system-main-flux-system"
echo "Checking for existing deploy key with title: $KEY_TITLE"

# List existing deploy keys and check if our key already exists
EXISTING_KEY_ID=$(gh api "repos/$REPO/keys" --jq ".[] | select(.title == \"$KEY_TITLE\") | .id" 2>/dev/null || true)

if [ -n "$EXISTING_KEY_ID" ]; then
    echo "Deploy key with title '$KEY_TITLE' already exists (ID: $EXISTING_KEY_ID)"
    echo -n "Do you want to update it? (y/N): "
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "Skipping deploy key update."
        exit 0
    fi
    echo "Removing existing deploy key..."
    gh api -X DELETE "repos/$REPO/keys/$EXISTING_KEY_ID"
fi

# Add the deploy key to the repository
echo "Adding deploy key to repository: $REPO"
if gh repo deploy-key add <(echo "$DEPLOY_KEY") \
    --title "$KEY_TITLE" \
    -R "$REPO" 2>&1 | tee /tmp/deploy-key-error.txt; then
    echo "✓ Deploy key successfully added to repository"
    echo
    echo "Flux should now be able to access the repository."
    echo "You can verify with: flux get sources git"
else
    echo
    if grep -q "Deploy keys are disabled" /tmp/deploy-key-error.txt; then
        echo "✗ Deploy keys are disabled for this repository" >&2
        echo
        echo "To fix this, you need to:"
        echo "1. Go to https://github.com/$REPO/settings/keys"
        echo "2. Enable deploy keys for the repository"
        echo "3. Run this script again"
        echo
        echo "Alternatively, you can manually add this deploy key:"
        echo
        echo "$DEPLOY_KEY"
        echo
        echo "With the title: $KEY_TITLE"
    else
        echo "✗ Failed to add deploy key" >&2
        cat /tmp/deploy-key-error.txt >&2
    fi
    rm -f /tmp/deploy-key-error.txt
    exit 1
fi