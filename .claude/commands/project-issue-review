#!/bin/bash
# Command: project:issue:review
# Description: Submit issue for code review (creates PR and updates status)
# Usage: /project:issue:review <issue_number> [pr_title]

ISSUE_NUMBER=$1
PR_TITLE=$2

if [ -z "$ISSUE_NUMBER" ]; then
    echo "Usage: /project:issue:review <issue_number> [pr_title]"
    exit 1
fi

# Get issue title if PR title not provided
if [ -z "$PR_TITLE" ]; then
    ISSUE_TITLE=$(gh issue view $ISSUE_NUMBER --json title --jq '.title')
    PR_TITLE="Fix #$ISSUE_NUMBER: $ISSUE_TITLE"
fi

# Check if we're on the right branch
CURRENT_BRANCH=$(git branch --show-current)
EXPECTED_BRANCH="issue-$ISSUE_NUMBER"

if [ "$CURRENT_BRANCH" != "$EXPECTED_BRANCH" ]; then
    echo "Warning: You're on branch '$CURRENT_BRANCH', expected '$EXPECTED_BRANCH'"
    echo "Continue anyway? (y/n)"
    read -r CONFIRM
    if [ "$CONFIRM" != "y" ]; then
        exit 1
    fi
fi

# Check for uncommitted changes
if ! git diff --quiet || ! git diff --staged --quiet; then
    echo "You have uncommitted changes. Commit them first:"
    echo "git add . && git commit -m 'your commit message'"
    exit 1
fi

# Push branch
echo "Pushing branch..."
git push -u origin "$CURRENT_BRANCH"

# Create PR
echo "Creating pull request..."
PR_URL=$(gh pr create \
    --title "$PR_TITLE" \
    --body "Closes #$ISSUE_NUMBER

## Changes
- [ ] Implementation complete
- [ ] Tests added/updated
- [ ] Documentation updated (if needed)

## Testing
- [ ] All tests pass locally
- [ ] Manual testing completed" \
    --assignee @me \
    --base main)

if [ $? -eq 0 ]; then
    # Update issue status
    gh issue edit $ISSUE_NUMBER --add-label "status:code-review" --remove-label "status:in-progress"
    
    echo "‚úÖ Pull request created: $PR_URL"
    echo "üìã Issue #$ISSUE_NUMBER moved to code review"
    echo ""
    echo "Next steps:"
    echo "1. Wait for reviewer feedback"
    echo "2. Address any requested changes"
    echo "3. After approval, the PR will be merged"
else
    echo "‚ùå Failed to create pull request"
fi