---
name: 'Check Repository Status'
description: 'Determines repository status: template, configured, or deployed'
outputs:
  is-setup:
    description: 'Whether the repository has been set up (true/false)'
    value: ${{ steps.check.outputs.is-setup }}
  is-deployed:
    description: 'Whether infrastructure has been deployed (true/false)'
    value: ${{ steps.check.outputs.is-deployed }}
  should-skip:
    description: 'Whether workflows should be skipped (true/false)'
    value: ${{ steps.check.outputs.should-skip }}
  status:
    description: 'Repository status: template, configured, or deployed'
    value: ${{ steps.check.outputs.status }}

runs:
  using: 'composite'
  steps:
    - name: Check repository status
      id: check
      shell: bash
      run: |
        # Check deployment status by looking for deployed clusters
        # This replaces the KUBECONFIG check with a more secure approach
        if [ -n "${{ env.DIGITALOCEAN_TOKEN }}" ] && [ -n "${{ env.PROJECT_NAME }}" ]; then
          # Install doctl if not present
          if ! command -v doctl &> /dev/null; then
            echo "Installing doctl..."
            curl -sL https://github.com/digitalocean/doctl/releases/download/v1.117.0/doctl-1.117.0-linux-amd64.tar.gz | tar -xzv
            sudo mv doctl /usr/local/bin
          fi
          
          # Authenticate with DigitalOcean
          doctl auth init --access-token "${{ env.DIGITALOCEAN_TOKEN }}"
          
          # Check if any clusters exist and are running
          CLUSTER_COUNT=$(doctl kubernetes cluster list --format Status --no-header | grep -c "running" || echo "0")
          
          if [ "$CLUSTER_COUNT" -gt 0 ]; then
            echo "is-setup=true" >> $GITHUB_OUTPUT
            echo "is-deployed=true" >> $GITHUB_OUTPUT
            echo "should-skip=false" >> $GITHUB_OUTPUT
            echo "status=deployed" >> $GITHUB_OUTPUT
            echo "🚀 Repository is deployed and operational (found $CLUSTER_COUNT running cluster(s))"
          else
            echo "is-setup=true" >> $GITHUB_OUTPUT
            echo "is-deployed=false" >> $GITHUB_OUTPUT
            echo "should-skip=false" >> $GITHUB_OUTPUT
            echo "status=configured" >> $GITHUB_OUTPUT
            echo "⚙️ Repository is configured but no running clusters found"
          fi
          
        # Check if configured but not yet deployed
        elif [ -n "${{ env.PROJECT_NAME }}" ]; then
          echo "is-setup=true" >> $GITHUB_OUTPUT
          echo "is-deployed=false" >> $GITHUB_OUTPUT
          echo "should-skip=false" >> $GITHUB_OUTPUT
          echo "status=configured" >> $GITHUB_OUTPUT
          echo "⚙️ Repository is configured and ready for deployment"
          
        elif [ -f "platform/config.json" ]; then
          echo "is-setup=true" >> $GITHUB_OUTPUT
          echo "is-deployed=false" >> $GITHUB_OUTPUT
          echo "should-skip=false" >> $GITHUB_OUTPUT
          echo "status=configured" >> $GITHUB_OUTPUT
          echo "⚙️ Repository is configured (config.json exists)"
          
        # Template state
        else
          echo "is-setup=false" >> $GITHUB_OUTPUT
          echo "is-deployed=false" >> $GITHUB_OUTPUT
          echo "should-skip=true" >> $GITHUB_OUTPUT
          echo "status=template" >> $GITHUB_OUTPUT
          echo "📋 Repository appears to be a template - workflows will be skipped"
          echo "ℹ️ Run ./setup.ts to configure this repository"
        fi