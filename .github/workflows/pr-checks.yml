name: PR Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  check-status:
    name: Check Repository Status
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{ steps.status-check.outputs.should-skip }}
      is-setup: ${{ steps.status-check.outputs.is-setup }}
      is-deployed: ${{ steps.status-check.outputs.is-deployed }}
      status: ${{ steps.status-check.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check repository status
        id: status-check
        uses: ./.github/actions/check-repository-status
        env:
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

  validate:
    name: Validate Code Quality
    needs: check-status
    if: needs.check-status.outputs.should-skip != 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
      
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Type check
      run: pnpm run typecheck
      
    - name: Lint code
      run: pnpm run lint
      
    - name: Lint workflows
      run: |
        if ! command -v actionlint &> /dev/null; then
          echo "Installing actionlint..."
          mkdir -p .tools
          cd .tools
          curl -sSL https://github.com/rhysd/actionlint/releases/download/v1.7.4/actionlint_1.7.4_linux_amd64.tar.gz | tar xz
          cd ..
          ./.tools/actionlint
        else
          actionlint
        fi
      
    - name: Check code formatting
      run: pnpm run format:check
      
    - name: Build project
      run: pnpm run build
      
    - name: Run tests
      run: pnpm run test

  security:
    name: Security Scan
    needs: check-status
    if: needs.check-status.outputs.should-skip != 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
      
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run security audit
      run: pnpm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  setup-validation:
    name: Validate Setup Script
    needs: check-status
    if: needs.check-status.outputs.should-skip != 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
        
    - name: Install tsx
      run: npm install -g tsx
      
    - name: Validate setup.ts syntax
      run: tsx setup.ts --help
      
    - name: Test setup.ts dry-run
      run: tsx setup.ts --dry-run --skip-github --no-interactive
      env:
        DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "us-east-1"
        SETUP_PROJECT_NAME: "test-project"
        SETUP_DOMAIN: "test.example.com"
        SETUP_EMAIL: "test@example.com"
        SETUP_DESCRIPTION: "Test project"
        SETUP_REGION: "nyc1"
        SETUP_NODE_SIZE: "s-2vcpu-4gb"
        SETUP_NODE_COUNT: "3"
        SETUP_ENVIRONMENT: "production"