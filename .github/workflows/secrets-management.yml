name: Secrets Management

on:
  workflow_dispatch:
    inputs:
      appName:
        description: 'Application name (keycloak, mattermost, nextcloud, mailu, or all)'
        required: true
        type: choice
        options:
          - all
          - keycloak
          - mattermost
          - nextcloud
          - mailu
      environment:
        description: 'Target environment'
        required: true
        type: choice
        default: 'prod'
        options:
          - prod
          - staging
          - dev
  push:
    paths:
      - 'flux/clusters/cumulus/*/secrets-template.yaml'
      - '.github/workflows/secrets-management.yml'

jobs:
  process-secrets:
    name: Process and Encrypt Secrets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install Tools
        run: |
          # Install SOPS
          curl -LO https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64
          sudo mv sops-v3.8.1.linux.amd64 /usr/local/bin/sops
          sudo chmod +x /usr/local/bin/sops
          
          # Install age
          curl -LO https://github.com/FiloSottile/age/releases/download/v1.1.1/age-v1.1.1-linux-amd64.tar.gz
          tar xzf age-v1.1.1-linux-amd64.tar.gz
          sudo mv age/age /usr/local/bin/
          sudo mv age/age-keygen /usr/local/bin/
          sudo chmod +x /usr/local/bin/age /usr/local/bin/age-keygen
          
          # Install gomplate
          curl -o /tmp/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.11.7/gomplate_linux-amd64
          sudo mv /tmp/gomplate /usr/local/bin/gomplate
          sudo chmod +x /usr/local/bin/gomplate

      - name: Setup age key
        run: |
          # Create age private key from GitHub secret
          echo "${{ secrets.SOPS_AGE_PRIVATE_KEY }}" > age.key
          chmod 600 age.key
          export SOPS_AGE_KEY_FILE=$(pwd)/age.key
          echo "SOPS_AGE_KEY_FILE=$(pwd)/age.key" >> $GITHUB_ENV

      - name: Process Keycloak Secrets
        if: ${{ github.event.inputs.appName == 'keycloak' || github.event.inputs.appName == 'all' || github.event_name == 'push' }}
        env:
          KEYCLOAK_DB_PASSWORD: ${{ secrets.KEYCLOAK_PROD_DB_PASSWORD }}
          KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_PROD_ADMIN_PASSWORD }}
        run: |
          TEMPLATE_FILE="flux/clusters/cumulus/keycloak/secrets-template.yaml"
          OUTPUT_FILE="flux/clusters/cumulus/keycloak/secrets.enc.yaml"
          
          echo "Processing Keycloak secrets..."
          
          # Render template
          gomplate -f "$TEMPLATE_FILE" -o /tmp/keycloak-secrets.yaml
          
          # Encrypt with SOPS
          sops --encrypt --input-type yaml --output-type yaml \
            /tmp/keycloak-secrets.yaml > "$OUTPUT_FILE"
          
          # Clean up
          rm -f /tmp/keycloak-secrets.yaml

      - name: Process Mattermost Secrets
        if: ${{ github.event.inputs.appName == 'mattermost' || github.event.inputs.appName == 'all' || github.event_name == 'push' }}
        env:
          MATTERMOST_DB_PASSWORD: ${{ secrets.MATTERMOST_PROD_DB_PASSWORD }}
          MATTERMOST_OAUTH_CLIENT_ID: ${{ secrets.MATTERMOST_PROD_OAUTH_CLIENT_ID }}
          MATTERMOST_OAUTH_CLIENT_SECRET: ${{ secrets.MATTERMOST_PROD_OAUTH_CLIENT_SECRET }}
        run: |
          TEMPLATE_FILE="flux/clusters/cumulus/mattermost/secrets-template.yaml"
          OUTPUT_FILE="flux/clusters/cumulus/mattermost/secrets.enc.yaml"
          
          echo "Processing Mattermost secrets..."
          
          # Render template
          gomplate -f "$TEMPLATE_FILE" -o /tmp/mattermost-secrets.yaml
          
          # Encrypt with SOPS
          sops --encrypt --input-type yaml --output-type yaml \
            /tmp/mattermost-secrets.yaml > "$OUTPUT_FILE"
          
          # Clean up
          rm -f /tmp/mattermost-secrets.yaml

      - name: Process Nextcloud Secrets
        if: ${{ github.event.inputs.appName == 'nextcloud' || github.event.inputs.appName == 'all' || github.event_name == 'push' }}
        env:
          NEXTCLOUD_DB_PASSWORD: ${{ secrets.NEXTCLOUD_PROD_DB_PASSWORD }}
          NEXTCLOUD_OIDC_CLIENT_ID: ${{ secrets.NEXTCLOUD_PROD_OIDC_CLIENT_ID }}
          NEXTCLOUD_OIDC_CLIENT_SECRET: ${{ secrets.NEXTCLOUD_PROD_OIDC_CLIENT_SECRET }}
          NEXTCLOUD_SPACES_ACCESS_KEY: ${{ secrets.NEXTCLOUD_PROD_SPACES_ACCESS_KEY }}
          NEXTCLOUD_SPACES_SECRET_KEY: ${{ secrets.NEXTCLOUD_PROD_SPACES_SECRET_KEY }}
        run: |
          TEMPLATE_FILE="flux/clusters/cumulus/nextcloud/secrets-template.yaml"
          OUTPUT_FILE="flux/clusters/cumulus/nextcloud/secrets.enc.yaml"
          
          echo "Processing Nextcloud secrets..."
          
          # Render template
          gomplate -f "$TEMPLATE_FILE" -o /tmp/nextcloud-secrets.yaml
          
          # Encrypt with SOPS
          sops --encrypt --input-type yaml --output-type yaml \
            /tmp/nextcloud-secrets.yaml > "$OUTPUT_FILE"
          
          # Clean up
          rm -f /tmp/nextcloud-secrets.yaml

      - name: Process Mailu Secrets
        if: ${{ github.event.inputs.appName == 'mailu' || github.event.inputs.appName == 'all' || github.event_name == 'push' }}
        env:
          MAILU_OAUTH2_CLIENT_ID: ${{ secrets.MAILU_PROD_OAUTH2_CLIENT_ID }}
          MAILU_OAUTH2_CLIENT_SECRET: ${{ secrets.MAILU_PROD_OAUTH2_CLIENT_SECRET }}
          MAILU_OAUTH2_COOKIE_SECRET: ${{ secrets.MAILU_PROD_OAUTH2_COOKIE_SECRET }}
        run: |
          TEMPLATE_FILE="flux/clusters/cumulus/mailu/secrets-template.yaml"
          OUTPUT_FILE="flux/clusters/cumulus/mailu/secrets.enc.yaml"
          
          echo "Processing Mailu secrets..."
          
          # Render template
          gomplate -f "$TEMPLATE_FILE" -o /tmp/mailu-secrets.yaml
          
          # Encrypt with SOPS
          sops --encrypt --input-type yaml --output-type yaml \
            /tmp/mailu-secrets.yaml > "$OUTPUT_FILE"
          
          # Clean up
          rm -f /tmp/mailu-secrets.yaml

      - name: Clean up age key
        if: always()
        run: |
          rm -f age.key

      - name: Commit encrypted secrets
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes
          if [[ -n $(git status --porcelain flux/clusters/cumulus/*/secrets.enc.yaml) ]]; then
            git add flux/clusters/cumulus/*/secrets.enc.yaml
            git commit -m "chore: update encrypted secrets for ${{ github.event.inputs.appName || 'all applications' }}"
            git push
          else
            echo "No changes to encrypted secrets"
          fi