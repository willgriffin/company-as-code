name: External Secrets Setup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        default: 'prod'
        options:
          - prod
          - staging
          - dev
  push:
    branches: [main]
    paths:
      - 'flux/clusters/cumulus/core/external-secrets/**'
      - '.github/workflows/external-secrets-setup.yml'

env:
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  setup-external-secrets:
    name: Setup External Secrets Infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip this job if IS_TEMPLATE repository variable is set to 'true'
    if: vars.IS_TEMPLATE != 'true'
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
          
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: 'kubectl,flux,gomplate'

      - name: Setup kubectl
        run: |
          # Setup kubeconfig from secret
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          chmod 600 kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV

      - name: Verify cluster connectivity
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Process and apply external secrets configuration
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          DO_SPACES_ACCESS_KEY: ${{ secrets.DO_SPACES_ACCESS_KEY }}
          DO_SPACES_SECRET_KEY: ${{ secrets.DO_SPACES_SECRET_KEY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
        run: |
          echo "üîê Setting up External Secrets infrastructure..."
          
          # Apply external secrets operator first
          kubectl apply -k flux/clusters/cumulus/controllers/external-secrets-operator/
          
          # Wait for external secrets operator to be ready
          echo "‚è≥ Waiting for External Secrets Operator to be ready..."
          kubectl wait --for=condition=available --timeout=300s deployment/external-secrets -n external-secrets-system
          kubectl wait --for=condition=available --timeout=300s deployment/external-secrets-webhook -n external-secrets-system
          kubectl wait --for=condition=available --timeout=300s deployment/external-secrets-cert-controller -n external-secrets-system
          
          # Process central secrets configuration
          echo "üèóÔ∏è Processing central secrets configuration..."
          
          # Create temporary directory for processed manifests
          mkdir -p /tmp/external-secrets
          
          # Process source secrets with environment variables
          gomplate --file flux/clusters/cumulus/core/external-secrets/digitalocean-source-secrets.yaml \
                   --out /tmp/external-secrets/digitalocean-source-secrets.yaml
          
          # Apply other external secrets configuration
          kubectl apply -f flux/clusters/cumulus/core/external-secrets/digitalocean-secrets-namespace.yaml
          kubectl apply -f flux/clusters/cumulus/core/external-secrets/cluster-secret-store.yaml
          
          # Apply processed source secrets
          kubectl apply -f /tmp/external-secrets/digitalocean-source-secrets.yaml
          
          # Wait for secret stores to be ready
          echo "‚è≥ Waiting for secret stores to be ready..."
          kubectl wait --for=condition=Ready --timeout=120s secretstore digitalocean-core -n external-dns || true
          kubectl wait --for=condition=Ready --timeout=120s clustersecretstore digitalocean-secrets || true
          
          # Clean up
          rm -rf /tmp/external-secrets

      - name: Verify secret stores
        run: |
          echo "‚úÖ Verifying External Secrets setup..."
          
          # Check secret stores status
          kubectl get clustersecretstore -o wide
          kubectl get secretstore -A -o wide
          
          # Check if source secrets are created
          kubectl get secrets -n digitalocean-secrets
          
          # Check External Secrets Operator status
          kubectl get pods -n external-secrets-system
          
          echo "üéâ External Secrets setup complete!"

      - name: Test external secret synchronization
        run: |
          echo "üß™ Testing ExternalSecret synchronization..."
          
          # Apply external-dns external secret
          kubectl apply -f flux/clusters/cumulus/core/external-dns/external-secret.yaml
          
          # Wait for secret to be synchronized
          echo "‚è≥ Waiting for external-dns secret synchronization..."
          timeout=60
          while [ $timeout -gt 0 ]; do
            if kubectl get secret external-dns-digitalocean -n external-dns >/dev/null 2>&1; then
              echo "‚úÖ Secret external-dns-digitalocean synchronized successfully!"
              kubectl get secret external-dns-digitalocean -n external-dns -o yaml
              break
            fi
            echo "Waiting for secret synchronization... ($timeout seconds remaining)"
            sleep 5
            timeout=$((timeout - 5))
          done
          
          if [ $timeout -le 0 ]; then
            echo "‚ùå Secret synchronization timed out"
            kubectl describe externalsecret external-dns-digitalocean -n external-dns
            exit 1
          fi

      - name: Clean up
        run: |
          rm -f kubeconfig