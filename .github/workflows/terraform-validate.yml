name: Terraform Validate

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-*.yml'

jobs:
  validate:
    name: Validate and Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Skip this job if IS_TEMPLATE repository variable is set to 'true'
    if: vars.IS_TEMPLATE != 'true'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.1

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check -recursive
      working-directory: ./terraform
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init -backend=false
      working-directory: ./terraform/digitalocean
      env:
        TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ./terraform/digitalocean

    - name: Comment PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ \`${{ steps.validate.outcome }}\`
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })